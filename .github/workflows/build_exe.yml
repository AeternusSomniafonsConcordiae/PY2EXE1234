name: Build Windows EXE
on:
  push:
    paths:
      - 'script.py'
      - 'icon.ico'
      - 'version_info.txt'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Verify files exist
        run: |
          if (-not (Test-Path "script.py")) { throw "script.py not found" }
          if (-not (Test-Path "icon.ico")) { throw "icon.ico not found" }
          if (-not (Test-Path "version_info.txt")) { throw "version_info.txt not found" }

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka pynput pyarmor

      - name: Parse version info
        id: version
        run: |
          $content = Get-Content version_info.txt -Raw
          $version = ($content | Select-String 'version="([^"]+)"').Matches.Groups[1].Value
          $company = ($content | Select-String 'company_name="([^"]+)"').Matches.Groups[1].Value
          $description = ($content | Select-String 'file_description="([^"]+)"').Matches.Groups[1].Value
          $copyright = ($content | Select-String 'legal_copyright="([^"]+)"').Matches.Groups[1].Value
          $product = ($content | Select-String 'product_name="([^"]+)"').Matches.Groups[1].Value
          
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "company=$company" >> $env:GITHUB_OUTPUT
          echo "description=$description" >> $env:GITHUB_OUTPUT
          echo "copyright=$copyright" >> $env:GITHUB_OUTPUT
          echo "product=$product" >> $env:GITHUB_OUTPUT

      - name: Obfuscate code
        run: |
          pyarmor gen --output ./build script.py

      - name: Create version resource file
        run: |
          @"
          VS_VERSION_INFO VERSIONINFO
          FILEVERSION ${{ steps.version.outputs.version.split('.')[0 }},${{ steps.version.outputs.version.split('.')[1 }},${{ steps.version.outputs.version.split('.')[2 }},0
          PRODUCTVERSION ${{ steps.version.outputs.version.split('.')[0 }},${{ steps.version.outputs.version.split('.')[1 }},${{ steps.version.outputs.version.split('.')[2 }},0
          FILEFLAGSMASK 0x3fL
          FILEFLAGS 0x0L
          FILEOS 0x40004L
          FILETYPE 0x1L
          FILESUBTYPE 0x0L
          BEGIN
              BLOCK "StringFileInfo"
              BEGIN
                  BLOCK "040904b0"
                  BEGIN
                      VALUE "CompanyName", "${{ steps.version.outputs.company }}"
                      VALUE "FileDescription", "${{ steps.version.outputs.description }}"
                      VALUE "FileVersion", "${{ steps.version.outputs.version }}"
                      VALUE "LegalCopyright", "${{ steps.version.outputs.copyright }}"
                      VALUE "ProductName", "${{ steps.version.outputs.product }}"
                      VALUE "ProductVersion", "${{ steps.version.outputs.version }}"
                  END
              END
              BLOCK "VarFileInfo"
              BEGIN
                  VALUE "Translation", 0x409, 1200
              END
          END
          "@ | Out-File -FilePath version.rc -Encoding ASCII

      - name: Compile with Nuitka
        run: |
          python -m nuitka --onefile `
                 --windows-disable-console `
                 --remove-output `
                 --windows-icon-from-ico=icon.ico `
                 --windows-version-file=version.rc `
                 --output-filename="KeyboardManager.exe" `
                 --include-package=pynput `
                 ./build/script.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: KeyboardManager
          path: KeyboardManager.exe
          retention-days: 3
